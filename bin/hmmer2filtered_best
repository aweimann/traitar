#!/usr/bin/env python
from traitar.hmmer2filtered_best import apply_thresholds, aggregate_domain_hits
if __name__ == "__main__":
    import argparse
    import sys
    parser = argparse.ArgumentParser("parse hmmer output file and generated filtered best file")
    parser.add_argument("infile_f", help='a space-delimited output file from hmmer', default = sys.stdin, type = file)
    parser.add_argument("out_best_f", help='hmmer tab delimited file with hits removed according to the thresholds and only best domain hit retained')
    parser.add_argument("hmm_name", choices = ["pfam", "dbcan"], help ='name of the HMM database; this will determine the filtering applied')
    parser.add_argument("--out_excl_f", help='domain hits filtered due to the applied thresholds')
    parser.add_argument("--out_filt_f", help='hmmer tab delimited file with hits removed according to the thresholds')
    #parser.add_argument("aln_cov_thresh", help = 'threshold for the alignment length coverage', type = int)
    args = parser.parse_args()
    filtered_df = apply_thresholds(args.infile_f, args.hmm_name, args.out_filt_f, args.out_excl_f) 
    aggregate_domain_hits(filtered_df, args.out_best_f)
